{"version":3,"sources":["services.js","Persons.js","Filter.js","PersonForm.js","Notification/Error.js","Notification/Success.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","get","response","data","create","newObject","post","update","id","put","deleteNote","delete","Persons","persons","handleDelete","map","person","key","name","number","onClick","Filter","filter","handleFilter","value","onChange","PersonForm","newName","setNewName","newNumber","setNewNumber","handleSubmit","event","target","type","Error","message","className","Success","App","useState","setPersons","setFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","services","then","catch","error","console","log","temp","toLowerCase","includes","length","preventDefault","duplicatePerson","find","window","confirm","newPerson","setTimeout","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.240eb995.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst deleteNote = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`);\n  return response.data;\n};\n\nexport default { getAll, create, update, deleteNote };\n","import React from 'react';\n\nconst Persons = ({ persons, handleDelete }) => {\n  return (\n    <>\n      {persons.map(person => (\n        <div key={person.id}>\n          <span>\n            {person.name} {person.number}\n          </span>\n          <button id={person.id} onClick={() => handleDelete(person.id)}>\n            Delete\n          </button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Filter = ({ filter, handleFilter }) => (\n  <div>\n    filter shown with: <input value={filter} onChange={handleFilter} />\n  </div>\n);\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({\n  newName,\n  setNewName,\n  newNumber,\n  setNewNumber,\n  handleSubmit\n}) => (\n  <form>\n    <div>\n      name:{' '}\n      <input\n        value={newName}\n        onChange={event => setNewName(event.target.value)}\n      />\n    </div>\n    <div>\n      number:{' '}\n      <input\n        value={newNumber}\n        onChange={event => setNewNumber(event.target.value)}\n      />\n    </div>\n    <div>\n      <button type=\"submit\" onClick={handleSubmit}>\n        add\n      </button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from 'react';\nimport './Error.css';\n\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Error;\n","import React from 'react';\nimport './Success.css';\n\nconst Success = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"success\">{message}</div>;\n};\n\nexport default Success;\n","import React, { useState, useEffect } from 'react';\nimport services from './services';\nimport Persons from './Persons';\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Error from './Notification/Error';\nimport Success from './Notification/Success';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    services\n      .getAll()\n      .then(response => {\n        setPersons(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const duplicatePerson = persons.find(person => person.name === newName);\n    if (duplicatePerson) {\n      const result = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (result) {\n        const newPerson = {\n          name: duplicatePerson.name,\n          number: newNumber\n        };\n        services\n          .update(duplicatePerson.id, newPerson)\n          .then(response => {\n            setPersons(\n              persons.map(person =>\n                person.id !== response.id ? person : response\n              )\n            );\n          })\n          .catch(() => {\n            setErrorMessage(\n              `Information of ${newName} has already been removed from the server.`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 3000);\n          });\n        setNewName('');\n        setNewNumber('');\n      } else {\n        setNewName('');\n        setNewNumber('');\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      };\n      services.create(newPerson).then(response => {\n        setPersons(persons.concat(response));\n        setSuccessMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n      });\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  const handleFilter = event => {\n    setFilter(event.target.value);\n    const temp = persons.filter(person =>\n      person.name.toLowerCase().includes(event.target.value.toLowerCase())\n    );\n    if (filter.length !== 0) {\n      setPersons(temp);\n    }\n  };\n\n  const handleDelete = id => {\n    services.deleteNote(id).then(response => {\n      console.log(response);\n      const newPerson = persons.filter(person => person.id !== id);\n      setPersons(newPerson);\n    });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Success message={successMessage} />\n      <Error message={errorMessage} />\n      <Filter filter={filter} handleFilter={handleFilter} />\n      <h2>add new</h2>\n      <PersonForm\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}